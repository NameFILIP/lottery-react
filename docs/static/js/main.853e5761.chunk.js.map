{"version":3,"sources":["web3.js","lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","inputs","stateMutability","type","name","outputs","internalType","App","useState","manager","setManager","players","setPlayers","balance","setBalance","value","setValue","message","setMessage","useEffect","a","lottery","methods","call","getPlayers","getBalance","options","address","asyncEffect","onSubmit","useCallback","event","preventDefault","getAccounts","accounts","enter","send","from","utils","toWei","onClick","pickWinner","length","fromWei","onChange","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ikBAEAA,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,wBAElC,IAEeC,EAFF,IAAIC,IAAKL,OAAOC,UC0Cd,MAAIG,EAAKE,IAAIC,SA3ChB,CACV,CACEC,OAAQ,GACRC,gBAAiB,aACjBC,KAAM,eAER,CACEF,OAAQ,GACRG,KAAM,QACNC,QAAS,GACTH,gBAAiB,UACjBC,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,aACNC,QAAS,CAAC,CAAEC,aAAc,YAAaF,KAAM,GAAID,KAAM,cACvDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,UACNC,QAAS,CAAC,CAAEC,aAAc,UAAWF,KAAM,GAAID,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,YAER,CACEF,OAAQ,GACRG,KAAM,aACNC,QAAS,GACTH,gBAAiB,aACjBC,KAAM,YAER,CACEF,OAAQ,CAAC,CAAEK,aAAc,UAAWF,KAAM,GAAID,KAAM,YACpDC,KAAM,UACNC,QAAS,CAAC,CAAEC,aAAc,UAAWF,KAAM,GAAID,KAAM,YACrDD,gBAAiB,OACjBC,KAAM,aAxCM,8C,QCuFDI,MAnFf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGiBJ,mBAAS,IAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAIaN,mBAAS,IAJtB,mBAINO,EAJM,KAICC,EAJD,OAKiBR,mBAAS,IAL1B,mBAKNS,EALM,KAKGC,EALH,KAObC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,sEACIC,EAAQC,QAAQb,UAAUc,OAD9B,cACZd,EADY,gBAEIY,EAAQC,QAAQE,aAAaD,OAFjC,cAEZZ,EAFY,gBAGId,EAAKE,IAAI0B,WAAWJ,EAAQK,QAAQC,SAHxC,OAGZd,EAHY,OAIlBH,EAAWD,GACXG,EAAWD,GACXG,EAAWD,GANO,4CAAH,qDAQjBe,KACC,IAEH,IAAMC,EAAWC,sBAAW,uCAC1B,WAAOC,GAAP,eAAAX,EAAA,6DACEW,EAAMC,iBADR,SAGyBnC,EAAKE,IAAIkC,cAHlC,cAGQC,EAHR,OAKEhB,EAAW,qCALb,SAOQG,EAAQC,QAAQa,QAAQC,KAAK,CACjCC,KAAMH,EAAS,GACfnB,MAAOlB,EAAKyC,MAAMC,MAAMxB,EAAO,WATnC,OAYEG,EAAW,yBAZb,2CAD0B,sDAe1B,CAACH,IAGGyB,EAAUV,sBAAW,sBAAC,4BAAAV,EAAA,sEACHvB,EAAKE,IAAIkC,cADN,cACpBC,EADoB,OAG1BhB,EAAW,qCAHe,SAKpBG,EAAQC,QAAQmB,aAAaL,KAAK,CACtCC,KAAMH,EAAS,KANS,OAS1BhB,EAAW,6BATe,2CAUzB,IAEH,OACE,gCACE,kDACA,8DAAiCT,EAAjC,OACA,qDACuBE,EAAQ+B,OAD/B,gDAEoB7C,EAAKyC,MAAMK,QAAQ9B,EAAS,SAFhD,aAIA,uBAEA,uBAAMgB,SAAUA,EAAhB,UACE,wDACA,gCACE,6DACA,uBACEd,MAAOA,EACP6B,SAAU,SAACb,GAAD,OAAWf,EAASe,EAAMc,cAAc9B,UAEpD,iDAIJ,uBAEA,yDACA,wBAAQyB,QAASA,EAAjB,4BAEA,uBAEA,6BAAKvB,QCxEI6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.853e5761.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\n\nconst web3 = new Web3(window.ethereum);\n\nexport default web3;\n","import web3 from \"./web3.js\";\n\nconst address = \"0x6A01d3578a1A804f9510daE5Be1a8A8e3CEF09f3\";\nconst abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [],\n    name: \"enter\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPlayers\",\n    outputs: [{ internalType: \"address[]\", name: \"\", type: \"address[]\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"manager\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pickWinner\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    name: \"players\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport default new web3.eth.Contract(abi, address);\n","import { useEffect, useState, useCallback } from \"react\";\n\nimport \"./App.css\";\nimport web3 from \"./web3.js\";\nimport lottery from \"./lottery.js\";\n\nfunction App() {\n  const [manager, setManager] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [balance, setBalance] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const asyncEffect = async () => {\n      const manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n      setManager(manager);\n      setPlayers(players);\n      setBalance(balance);\n    };\n    asyncEffect();\n  }, []);\n\n  const onSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n\n      const accounts = await web3.eth.getAccounts();\n\n      setMessage(\"Waiting on transaction success...\");\n\n      await lottery.methods.enter().send({\n        from: accounts[0],\n        value: web3.utils.toWei(value, \"ether\"),\n      });\n\n      setMessage(\"You have been entered\");\n    },\n    [value]\n  );\n\n  const onClick = useCallback(async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    setMessage(\"Waiting on transaction success...\");\n\n    await lottery.methods.pickWinner().send({\n      from: accounts[0],\n    });\n    \n    setMessage(\"A winner has been picked!\");\n  }, []);\n\n  return (\n    <div>\n      <h2>Lottery Contract</h2>\n      <p>This contract is managed by: {manager}.</p>\n      <p>\n        There are currently {players.length} people entered the lottery\n        competing to win {web3.utils.fromWei(balance, \"ether\")} ether!\n      </p>\n      <hr />\n\n      <form onSubmit={onSubmit}>\n        <h4>Want to try your luck?</h4>\n        <div>\n          <label>Amount of ether to enter</label>\n          <input\n            value={value}\n            onChange={(event) => setValue(event.currentTarget.value)}\n          />\n          <button>Enter</button>\n        </div>\n      </form>\n\n      <hr />\n\n      <h4>Ready to pick a winner?</h4>\n      <button onClick={onClick}>Pick a winner!</button>\n\n      <hr />\n\n      <h1>{message}</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}